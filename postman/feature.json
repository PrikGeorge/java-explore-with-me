{
  "info": {
    "name": "feature_comments",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "26037651"
  },
  "item": [
    {
      "name": "Create User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.environment.set('userid', jsonData.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \"name\": \"John Doe20230803\", \"email\": \"johndoe20230803@email.com\" }"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/users",
          "host": ["{{baseUrl}}"],
          "path": ["admin", "users"]
        }
      },
      "response": []
    },
    {
      "name": "Create Category",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.environment.set('categoryid', jsonData.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \"name\": \"New Category20230803\" }"
        },
        "url": {
          "raw": "{{baseUrl}}/admin/categories",
          "host": ["{{baseUrl}}"],
          "path": ["admin", "categories"]
        }
      },
      "response": []
    },
    {
      "name": "Create Event",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "let myObj = {",
              "    \"annotation\": \"Modi illum sint ut explicabo. Et cupiditate suscipit soluta fugiat non minus\",",
              "    \"category\": pm.environment.get('categoryid'),",
              "    \"description\": \"Earum voluptatem consequatur maiores molestiae\",",
              "    \"eventDate\": \"2023-09-03 01:27:28\",",
              "    \"location\": { \"lat\": -51.2532, \"lon\": -55.9849 },",
              "    \"paid\": false,",
              "    \"participantLimit\": 626,",
              "    \"requestModeration\": true,",
              "    \"title\": \"Voluptas beatae modi commodi vel est vel.\"",
              "};",
              "pm.variables.set('myObj', JSON.stringify(myObj));"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.environment.set('eventid', jsonData.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{{myObj}}"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{userid}}/events",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userid}}", "events"]
        }
      },
      "response": []
    },

    {
      "name": "Add Comment",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.environment.set('commentid', jsonData.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \"text\": \"esse nulla. Dolores soluta dignissimos et omnis sunt nobis. Maxime voluptas quodesse nulla. Dolores s\" }"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{userid}}/comment/{{eventid}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userid}}", "comment", "{{eventid}}"]
        }
      },
      "response": []
    },
    {
      "name": "Update Comment",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.environment.set('commentid', jsonData.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{ \"text\": \"Это обновленный текст комментария, который является достаточно длинным для удовлетворения минимального требования по длине\" }"
        },
        "url": {
          "raw": "{{baseUrl}}/users/{{userid}}/comment/{{commentid}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userid}}", "comment", "{{commentid}}"]
        }
      },
      "response": []
    },
    {
      "name": "Get Comment by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var jsonData = JSON.parse(responseBody);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comment/{{commentid}}",
          "host": ["{{baseUrl}}"],
          "path": ["comment", "{{commentid}}"]
        }
      },
      "response": []
    },
    {
      "name": "Get Comments by User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.test('Response is an array', function () {",
              "    pm.expect(Array.isArray(jsonData)).to.be.true;",
              "});",
              "pm.test('Array size is 1', function () {",
              "    pm.expect(jsonData.length).to.be.eql(1);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/{{userid}}/comment?asc=false&from=0&size=10",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userid}}", "comment"],
          "query": [
            {
              "key": "asc",
              "value": "false"
            },
            {
              "key": "from",
              "value": "0"
            },
            {
              "key": "size",
              "value": "10"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get Comments by Event",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var jsonData = JSON.parse(responseBody);",
              "pm.test('Response is an array', function () {",
              "    pm.expect(Array.isArray(jsonData)).to.be.true;",
              "});",
              "pm.test('Array size is 1', function () {",
              "    pm.expect(jsonData.length).to.be.eql(1);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/comments/all/{{eventId}}",
          "host": ["{{baseUrl}}"],
          "path": ["comments", "all", "{{eventId}}"]
        }
      },
      "response": []
    },
    {
      "name": "Delete Comment By Owner",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 204', function () {",
              "    pm.response.to.have.status(204);",
              "});",
              "pm.test('Response body is empty', function () {",
              "    pm.expect(pm.response.text()).to.eql('');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/users/{{userid}}/comment/{{commentid}}",
          "host": ["{{baseUrl}}"],
          "path": ["users", "{{userid}}", "comment", "{{commentid}}"]
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "userid",
      "value": "133"
    },
    {
      "key": "categoryid",
      "value": "118"
    },
    {
      "key": "eventid",
      "value": "103"
    },
    {
      "key": "commentid",
      "value": "1"
    }
  ]
}
